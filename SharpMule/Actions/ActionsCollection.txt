httprequest{delete,endpoint} # Add Comment Here
httprequest{get,endpoint} # Add Comment Here
httprequest{get,endpoint,,,expstatus} # Add Comment Here
httprequest{post,endpoint,requestbody} # Add Comment Here
httprequest{post,endpoint,requestbody,headers,expstatus} # Add Comment Here
httprequest{post,endpoint,,headers,expstatus} # Add Comment Here
httprequest{post,endpoint,,,expstatus} # Add Comment Here
httprequest{put,endpoint} # Add Comment Here
httpbsonrequest{get,endpoint} # Add Comment Here
httpfastinfosetrequest{post,endpoint,requestbody} # Add Comment Here
tryhttprequest{get,endpoint,,,,criteria,miliseconds} # Add Comment Here
tryhttprequest{get,endpoint,,,expstatus,criteria,miliseconds} # Add Comment Here
tryhttprequest{post,endpoint,requestbody,,,criteria,miliseconds} # Add Comment Here
tryhttprequest{post,endpoint,requestbody,headers,expstatus,criteria,miliseconds} # Add Comment Here
tryhttprequest{post,endpoint,,headers,expstatus,criteria,miliseconds} # Add Comment Here
tryhttprequest{post,endpoint,,,expstatus,criteria,miliseconds} # Add Comment Here
let{html,variable,locator(exp://*[@class='piid'])} # Add Comment Here
let{xpath,variable,locator(exp://ns8:TripID)} # Add Comment Here
let{value,variable,locator.ToLower()} # Add Comment Here
let{value,variable,locator.ToUpper()} # Add Comment Here
let{value,variable,locator.ToTitle()} # Add Comment Here
let{value,variable,locator.ToXml()} # Add Comment Here
let{value,variable,locator.ToUpperLowerMix()} # Add Comment Here
let{value,variable,locator.ToDateTimeFormat(yyyy-MM-ddThh:mm:ss-12:00)} # Add Comment Here
let{value,variable,locator.ToDateTimeUTCFormat(yyyy-MM-ddThh:mm:ss-12:00)} # Add Comment Here
let{value.from.xml,variable,locator,inputvariable} # Add Comment Here
let{value.from.xml.attribute,variable,locator} # Add Comment Here
let{regex,variable,regexpattern} # Add Comment Here
let{xml,variable,locator} # Add Comment here
let{xml.find,variable,sibling:ofNode:targetNode} # Add Comment Here
let{xml.find,variable,descendent:ofNode:targetNode:condition} # Add Comment Here
let{xml.count,variable,variable,locator} # Add Comment Here
verify{value,locator,varvalue} # Add Comment Here
verify{regex,regexpattern,varvalue} # Add Comment Here
verify{xpath,locator(exp://ns8:TripID),varvalue} # Add Comment Here
verify{xml,locator,varvalue} # Add Comment Here
verify{html,locator,varvalue} # Add Comment Here
verify{value.find,sibling:ofNode:targetNode,varvalue} # Add Comment Here
verify{xml.compare-same,locator,varvalue} # Add Comment Here
verify{xml.exists,locator} # Add Comment Here
verify{xml.nexist,locator} # Add Comment Here
verify{xml.count,locator,varvalue} # Add Comment Here
verify{value.contains,locator,varvalue} # Add Comment Here
verify{value.ncontains,locator,varvalue} # Add Comment Here
verify{value.in.contains,variable,varvalue} # Add Comment Here
verify{value.in.equals,variable,variable} # Add Comment Here
verify{value.in.nequals,variable,variable} # Add Comment Here
verify{value.exists,varvalue} # Add Comment Here
verify{value.nexist,varvalue} # # Add Comment Here
verify{value.from.xml.attribute,locator,varvalue} # Add Comment Here
verify{value.from.xml.attribute,locator,varvalue,inputvariable} # Add Comment Here
sleep{mseconds} # Add Comment Here
print{variable} # Add Comment Here
assign{variable,value} # Add Comment Here
getncorequest{newrequestvariable,requesttemplate,environment,checkin,checkout,hotelid,version,type} # Add Comment Here
sqlexecute{server,database,query} # Add Comment Here
sqlexecute2{server,database,query} # Add Comment Here
sshexecute{server,user,pass,commands} # Add Comment Here